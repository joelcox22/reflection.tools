{"version":3,"sources":["reflections.js","App.js","reportWebVitals.js","index.js"],"names":["sendersWeCareAbout","uniqueSenders","Object","values","filter","v","i","a","indexOf","colors","reduce","acc","sender","index","length","Reflections","useState","window","location","hash","replace","localStorage","getItem","address","setAddress","debouncedAddress","setDobouncedAddress","result","setResult","errors","setErrors","loading","setLoading","retry","setRetry","useEffect","timer","setTimeout","trim","setItem","addEventListener","updatedAddress","clearTimeout","gtag","match","query","URLSearchParams","module","action","sort","fetch","toString","then","res","json","message","totals","incomeCurrencies","sentTotals","transfer","from","date","Date","timeStamp","toISOString","split","currency","tokenSymbol","amount","value","Array","tokenDecimal","fill","join","includes","push","chartData","forEach","chart","labels","datasets","entries","label","Math","round","toLocaleString","backgroundColor","data","income","set","type","onChange","e","target","style","maxWidth","margin","padding","href","rel","JSON","stringify","onClick","map","width","height","options","scales","x","stacked","y","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0334795.chunk.js","sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst sendersWeCareAbout = {\n  \"0xfbab1d829e36efbd13642229eae2964004f38c41\": \"Evergrow\", // BUSD\n  \"0x9aacfd4ff2a965779cff25e370b89b788222e6b9\": \"Crypter\", // BUSD\n  \"0xfdac78ff52dead5a5f0b89b32a8ea66a01979f31\": \"Reflecto\", // BUSD\n  \"0xdedf5fa8ec49255bc2c7bfadcd18be2c0d228f99\": \"Reflecto\", // EGC\n  \"0x7bda2f125b0e63bb332e1e6342be381e28efaeb6\": \"Reflecto\", // CRYPT\n  \"0x65ab1b70c70011e4ea5a7268df159480c47e7f98\": \"Reflecto\", // SHIB\n  \"0xd93a7af8d6292030947b13dd2942a8d2baca649b\": \"Santa Coin\", // BUSD\n  \"0x62c73478676848b96b729a3f2e25412735154df0\": \"Corsac\", // BUSD\n  \"0x35074b2ab33048c84f37744484ee63e469dc68b8\": \"Techno Floki\", // DOGE\n  \"0xf8b814824efd4a2d238fcaa46f608bfd18236e8c\": \"ForeverGrow\", // BUSD\n  \"0x9e90d5e53baa6254be7db9cdb4afb4c60f9aacf7\": \"Y-5 Finance\", // BUSD\n  \"0xa383829c57a1b7ccbf7c6cf00c4dea06a8c2e814\": \"Rematic EGC\", // EGC\n  \"0x0b4a50a097848eea10e8848459ec1539645e5175\": \"Boda V2\", // BUSD\n  \"0x284c54b37f2ac667d84f0aa5d5bdfc8d3687304a\": \"Reflex Finance\", // BUSD\n};\n\nconst uniqueSenders = Object.values(sendersWeCareAbout).filter(\n  (v, i, a) => a.indexOf(v) === i\n);\n\nconst colors = uniqueSenders.reduce((acc, sender, index) => {\n  acc[sender] = `hsl(${(index / uniqueSenders.length) * 270} 100% 50%)`;\n  return acc;\n}, {});\n\nexport function Reflections() {\n  const [address, setAddress] = useState(() => {\n    return window.location.hash.replace('#', '') || localStorage.getItem(\"walletAddress\") || '';\n  });\n  const [debouncedAddress, setDobouncedAddress] = useState(address);\n  const [result, setResult] = useState(address);\n  const [errors, setErrors] = useState();\n  const [loading, setLoading] = useState(false);\n  const [retry, setRetry] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDobouncedAddress(address.trim());\n    }, 500);\n    localStorage.setItem(\"walletAddress\", address);\n    window.addEventListener('hashchange', () => {\n      const updatedAddress = window.location.hash.replace('#', '');\n      if (updatedAddress !== address) {\n        setAddress(updatedAddress);\n        setDobouncedAddress(updatedAddress);\n      }\n    });\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [address]);\n\n  useEffect(() => {\n\n    window.location.hash = debouncedAddress;\n\n    if (debouncedAddress === '') {\n      window.gtag('event', 'empty-wallet-address');\n      setLoading(false);\n      setErrors(false);\n      setResult(null);\n      return;\n    } else if (!debouncedAddress.match(/^0x[A-Za-z0-9]{40}$/)) {\n      setErrors(\"Invalid wallet address.\");\n      setLoading(false);\n      setResult(null);\n      window.gtag('event', 'invalid-wallet-address');\n      return;\n    }\n\n    window.gtag('event', 'lookup-wallet-address');\n\n    setLoading(true);\n    setErrors(false);\n    const query = new URLSearchParams({\n      module: 'account',\n      action: 'tokentx',\n      address: debouncedAddress,\n      sort: 'ASC',\n    });\n    fetch(`https://api.bscscan.com/api?${query.toString()}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setLoading(false);\n        if (res.message === 'NOTOK') {\n          setErrors(res.result);\n          window.gtag('event', 'rate-limited');\n          return;\n        }\n\n        if (res.errors) {\n          window.gtag('event', 'data-lookup-error');\n          setErrors(res.errors);\n          setResult(null);\n          return;\n        }\n\n        const totals = {};\n        const incomeCurrencies = [];\n\n        const sentTotals = res.result.reduce(\n          (acc, transfer) => {\n            const sender = sendersWeCareAbout[transfer.from];\n            if (!sender) return acc;\n            const date = new Date((transfer.timeStamp-0)*1e3).toISOString().split('T')[0];\n            const currency = transfer.tokenSymbol;\n            const amount = (transfer.value - 0) / (('1' + new Array(transfer.tokenDecimal - 0).fill('0').join('')) - 0);\n            acc[date] = acc[date] || {};\n            acc[date][currency] = acc[date][currency] || {};\n            acc[date][currency][sender] = acc[date][currency][sender] || 0;\n            acc[date][currency][sender] += amount;\n            if (!incomeCurrencies.includes(currency))\n              incomeCurrencies.push(currency);\n            totals[currency] = totals[currency] || {};\n            totals[currency][sender] = (totals[currency][sender] || 0) + amount;\n            return acc;\n          },\n          {}\n        );\n\n        const chartData = {};\n\n        incomeCurrencies.forEach((currency) => {\n          const chart = (chartData[currency] = {\n            labels: [],\n            datasets: {}\n          });\n          Object.entries(sentTotals).forEach(([date, income]) => {\n            chart.labels.push(date);\n          });\n          uniqueSenders.forEach((sender) => {\n            chart.datasets[sender] = {\n              label: `${sender} (${Math.round(totals[currency][sender]).toLocaleString()})`,\n              backgroundColor: colors[sender],\n              data: []\n            };\n          });\n        });\n\n        Object.entries(sentTotals).forEach(([date, income]) => {\n          incomeCurrencies.forEach((currency) => {\n            uniqueSenders.forEach((sender) => {\n              chartData[currency].datasets[sender].data.push(\n                income[currency]?.[sender] || 0\n              );\n            });\n          });\n        });\n\n        incomeCurrencies.forEach((currency) => {\n          const chart = chartData[currency];\n          chart.datasets = Object.values(chart.datasets).filter((set) => {\n            const sum = set.data.reduce((acc, value) => acc + value, 0);\n            return sum > 0;\n          });\n        });\n\n        setResult(chartData);\n      });\n  }, [debouncedAddress, retry]);\n\n  return (\n    <>\n      <p>Enter your wallet address</p>\n      <input\n        type=\"text\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\n        {debouncedAddress === \"\" ? (\n          <>\n            <p>This tool will fetch data about reflective tokens ({uniqueSenders.join(', ')}), and display how much you're earning from and in each token in a single place.</p>\n            <p>When you enter in your address, your browser makes a graphql query directly to https://api.bscscan.com/ to fetch all of your transactions, which are then processed client-side in your browser into simple graphs.</p>\n            <p>There's a good chance this tool might break sometime. It's just been hacked together in a few hours so far, and is not using any API key, so currently limited to 1 request every 5 seconds.</p>\n            <p>Feel free to log any issues <a href=\"https://github.com/joelcox22/reflection.tools/issues\" target=\"_blank\" rel=\"noreferrer\">in Github Issues</a>. <a href=\"https://github.com/joelcox22/reflection.tools\" target=\"_blank\" rel=\"noreferrer\">Full source code is available there too</a>.</p>\n            <p>Google analytics is setup purely so I can see how many people use this and if it's worth continuing development. Cookies are disabled - it's only interaction events with the page being logged.</p>\n            <p>Pull requests are welcome if anyone wants to help out or add more tokens.</p>\n            <p>I'd love to find a way to also fetch and display pending rewards from all of these tokens - if anyone knows how, please let me know via a Github Issue or something.</p>\n          </>\n        ) : errors ? (\n          <>\n            <pre>{JSON.stringify(errors, null, 4)}</pre>\n            {typeof errors === 'string' && errors.includes('rate limit') && (\n              <button onClick={() => {\n                setRetry(retry + 1);\n                window.gtag('event', 'refresh-because-rate-limited');\n              }}>Click here to try again</button>\n            )}\n          </>\n        ) : loading ? (\n          <p>Loading...</p>\n        ) : (\n          result && Object.entries(result).map(([currency, chart]) => (\n            <Fragment key={currency}>\n              <h1>{currency}</h1>\n              <Bar\n                data={chart}\n                width={100}\n                height={50}\n                options={{\n                  scales: {\n                    x: {\n                      stacked: true\n                    },\n                    y: {\n                      stacked: true\n                    }\n                  }\n                }}\n              />\n            </Fragment>\n          ))\n        )}\n      </div>\n    </>\n  );\n}\n","import { Reflections } from './reflections';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          Crypto Reflections\n        </h1>\n      </header>\n    <Reflections />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}